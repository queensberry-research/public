target-version = "py313"
unsafe-fixes = true

[format]
preview = true
skip-magic-trailing-comma = true

[lint]
explicit-preview-rules = true
fixable = ["ALL"]
ignore = [
  "ANN401",  # any-type
  "ASYNC109",  # async-function-with-timeout
  "C901",  # complex-structure
  "CPY",  # flake8-copyright
  "D",  # pydocstyle
  "E501",  # line-too-long
  "PD",  # pandas-vet
  "PERF203",  # try-except-in-loop
  "PLC0415",  # import-outside-top-level
  "PLE1205",  # logging-too-many-args
  "PLR0904",  # too-many-public-methods
  "PLR0911",  # too-many-return-statements
  "PLR0912",  # too-many-branches
  "PLR0913",  # too-many-arguments
  "PLR0915",  # too-many-statements
  "PLR2004",  # magic-value-comparison
  "PT012",  # pytest-raises-with-multiple-statements
  "PT013",  # pytest-incorrect-pytest-import
  "PYI041",  # redundant-numeric-union
  "S202",  # tarfile-unsafe-members
  "S310",  # suspicious-url-open-usage
  "S311",  # suspicious-non-cryptographic-random-usage
  "S602",  # subprocess-popen-with-shell-equals-true
  "S603",  # subprocess-without-shell-equals-true
  "S607",  # start-process-with-partial-path
  # preview
  "S101",  # assert
  # formatter
  "W191",  # tab-indentation
  "E111",  # indentation-with-invalid-multiple
  "E114",  # indentation-with-invalid-multiple-comment
  "E117",  # over-indented
  "COM812",  # missing-trailing-comma
  "COM819",  # prohibited-trailing-comma
  "ISC001",  # single-line-implicit-string-concatenation
  "ISC002",  # multi-line-implicit-string-concatenation
]
preview = true
select = [
  "ALL",
  # preview
  "RUF022",  # unsorted-dunder-all
  "RUF029",  # unused-async
]

[lint.extend-per-file-ignores]
"**/tests/**/*.py" = [
  "S101",  # assert
  "SLF001",  # private-member-access
]
"notebooks/*.py" = ["INP001"]  # implicit-namespace-package
"src/dts/data/static.py" = ["RUF001"]  # ambiguous-unicode-character-string

[lint.flake8-bugbear]
extend-immutable-calls = ["typing.cast"]

[lint.flake8-tidy-imports]
ban-relative-imports = "all"

[lint.isort]
required-imports = ["from __future__ import annotations"]
split-on-trailing-comma = false
