#!/usr/bin/env sh

echo_date() { echo "[$(date +'%Y-%m-%d %H:%M:%S')] $*" >&2; }

main() {
	[ $# -ne 0 ] && echo_date "'setup-vm' accepts 0 arguments; got $#" && return 1
	setup_aliases
	setup_bottom
	setup_env_vars
	setup_direnv #         after env vars
	setup_git
	setup_just
	setup_neovim
	setup_lazyvim        # after neovim
	setup_neovim_plugins # after LazyVim
	setup_starship       # after env vars
}

get_shell_rc() {
	case "${SHELL}" in
	*/bash) filename='.bashrc' ;;
	*/zsh) filename='.zshrc' ;;
	*) echo_date "Invalid shell: '${SHELL}'" && return 1 ;;
	esac
	echo "${HOME}/${filename}"
}

get_shell_name() {
	case "${SHELL}" in
	*/bash) echo 'bash' ;;
	*/zsh) echo 'zsh' ;;
	*) echo_date "Invalid shell: '${SHELL}'" && return 1 ;;
	esac
}

setup_aliases() {
	path=$(get_shell_rc) || return 1
	if ! grep -q '# aliases' "${path}"; then
		cat <<'EOF' >>"${path}"

# aliases
alias ~='cd "${HOME}"'
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'
alias l='ls -al'
EOF
	fi
}

setup_bottom() {
	if ! command -v btm >/dev/null 2>&1; then
		temp_dir=$(mktemp -d)
		trap 'rm -rf "${temp_dir}"' EXIT
		cd "${temp_dir}" || exit 1
		version='0.11.1'
		url="https://github.com/ClementTsang/bottom/releases/download/${version}/bottom_${version}-1_amd64.deb"
		curl -LO "${url}"
		if [ "$(whoami)" = 'root' ]; then
			dpkg -i bottom_*_amd64.deb
		else
			sudo dpkg -i bottom_*_amd64.deb
		fi
	fi
}

setup_direnv() {
	if ! command -v direnv >/dev/null 2>&1; then
		curl -sfL https://direnv.net/install.sh | bash # must be bash
	fi
	path=$(get_shell_rc) || return 1
	if ! grep -q '# direnv' "${path}"; then
		cat <<EOF >>"${path}"

# direnv
eval "\$(direnv hook $(get_shell_name))"
EOF
	fi
}

setup_env_vars() {
	path=$(get_shell_rc) || return 1
	if ! grep -q '# env vars' "${path}"; then
		cat <<'EOF' >>"${path}"

# env vars
export EDITOR='nvim'
export PATH="${HOME}/bin${PATH:+:${PATH}}"
EOF
	fi
}

setup_git() {
	if ! command -v git >/dev/null 2>&1; then
		if [ "$(whoami)" = 'root' ]; then
			apt install -y git
		else
			sudo apt install -y git
		fi
	fi
}

setup_just() {
	if ! command -v just >/dev/null 2>&1; then
		curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | sh -s -- --to "${HOME}"/bin
	fi
}

setup_neovim() {
	temp_dir=$(mktemp -d)
	trap 'rm -rf "${temp_dir}"' EXIT
	cd "${temp_dir}" || exit 1
	filename='nvim-linux-x86_64'
	tar_gz="${filename}.tar.gz"
	url="https://github.com/neovim/neovim/releases/download/v0.11.4/${tar_gz}"
	curl -LO "${url}"
	tar xzvf "${tar_gz}"
	cp -r "${filename}" "${HOME}"/bin
	(
		cd "${HOME}"/bin || exit 1
		ln -s "${filename}/bin/nvim" .
	)
	path=$(get_shell_rc) || return 1
	if ! grep -q '# neovim' "${path}"; then
		cat <<'EOF' >>"${path}"

# neovim
alias n='nvim'
EOF
	fi
}

setup_lazyvim() {
	rm -rf "${HOME}"/.config/nvim/
	rm -rf "${HOME}"/.local/share/
	rm -rf "${HOME}"/.local/state/
	rm -rf "${HOME}"/.cache/nvim/
	command -v git >/dev/null 2>&1 || setup_git
	git clone https://github.com/LazyVim/starter "${HOME}"/.config/nvim
}

setup_neovim_plugins() {
	cat <<'EOF' >>"${HOME}"/.config/nvim/lua/plugins/auto-save.lua
return { "pocco81/auto-save.nvim" }
EOF
}

setup_starship() {
	curl -sS https://starship.rs/install.sh | sh -s -- --bin-dir "${HOME}"/bin
	path=$(get_shell_rc) || return 1
	if ! grep -q 'starship init' "${path}"; then
		cat <<EOF >>"${path}"

# starship
eval "\$(starship init $(get_shell_name))"
EOF
	fi
}

main "$@"
