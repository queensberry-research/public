# build-system
[build-system]
  build-backend = "uv_build"
  requires = ["uv_build"]

# dependency groups
[dependency-groups]
  dev = ["dycw-utilities[test]", "pyright[nodejs]", "rich"]

# project
[project]
  authors = [{ email = "derek@queensberryresearch.com", name = "Derek Wan" }]
  dependencies = []
  name = "public"
  readme = "README.md"
  requires-python = ">= 3.13"
  version = "0.5.10"

  [project.scripts]
    install-public = "public.install:_install"

# coverage
[tool.coverage.html]
  directory = ".coverage/html"

[tool.coverage.report]
  exclude_also = ["@overload", "if TYPE_CHECKING:"]
  fail_under = 100.0
  skip_covered = true
  skip_empty = true

[tool.coverage.run]
  branch = true
  data_file = ".coverage/data"
  parallel = true

# nitpick
[tool.nitpick]
  style = [
    "https://raw.githubusercontent.com/dycw/nitpick/master/styles/3.13.toml",
    "https://raw.githubusercontent.com/dycw/nitpick/master/styles/common.toml",
  ]

# pytest
[tool.pytest.ini_options]
  addopts = ["-ra", "-vv", "--color=auto", "--strict-markers"]
  asyncio_default_fixture_loop_scope = "function"
  asyncio_mode = "auto"
  collect_imported_tests = false
  filterwarnings = ["error"]
  minversion = "8.0"
  testpaths = ["src/tests"]
  xfail_strict = true
